---
- hosts: '{{ host }}'
  gather_facts: False
  tasks:
  - name: Deploy {{ app }} on {{ host  }}
    debug: msg="Deploy {{ app }} on {{ host  }}"
  - name: Register app 
    command: echo {{ app }}
    register: appname
    ignore_errors: True
  - name: Register env
    command: echo {{ env }}
    register: environ
    ignore_errors: True
  - name: Create a package dir
    file: 
      path: /ddhome/packages 
      state: directory
      recurse: yes
  - name: Get jar from {{ url }}
    get_url:
      url: "{{ url }}/{{ project }}/{{ version }}/BE/{{ env }}/{{ time }}/{{ app }}-zjhw.jar"
      dest: /ddhome/packages/{{ app }}.jar
      mode: 0740
      force: yes
  - name: Create a running dir
    file:
      path: /ddhome/project/{{ project }}/{{ version }}/server/{{ app }}
      state: directory
      recurse: yes
  - name: Copy package to running dir
    shell: cp -f /ddhome/packages/{{ app }}.jar /ddhome/project/{{ project }}/{{ version }}/server/{{ app }}
  - name: Copy startup script to running dir
    template: 
      src: ../templates/startup.j2 
      dest: /ddhome/project/{{ project }}/{{ version }}/server/{{ app }}/startup.sh
      mode: 0740
  - name: Stop Service
    shell: cd /ddhome/project/{{ project }}/{{ version }}/server/{{ app }};./startup.sh stop
  - name: wait 10 seconds
    shell: sleep 10
    when: appname.stdout in ["iot-registe","iot-config","huayun-common-eureka","huayun-common-config"]
  - name: Start Service
    shell: export BUILD_ID=DONTKILLME;cd /ddhome/project/{{ project }}/{{ version }}/server/{{ app }};./startup.sh start {{ env }}
    when: environ.stdout != "master"
  - name: Start Service
    shell: export BUILD_ID=DONTKILLME;cd /ddhome/project/{{ project }}/{{ version }}/server/{{ app }};./startup.sh start prod
    when: environ.stdout == "master"
  - name: wait 20 seconds
    shell: sleep 20
    when: appname.stdout in ["iot-registe","iot-config","huayun-common-eureka","huayun-common-config"]
